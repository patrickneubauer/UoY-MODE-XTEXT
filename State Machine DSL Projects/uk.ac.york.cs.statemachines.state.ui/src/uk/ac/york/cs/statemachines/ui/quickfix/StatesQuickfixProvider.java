/*
 * generated by Xtext
 */
package uk.ac.york.cs.statemachines.ui.quickfix;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EStructuralFeature;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.ui.editor.XtextEditor;
import org.eclipse.xtext.ui.editor.model.IXtextDocument;
import org.eclipse.xtext.ui.editor.model.edit.IModificationContext;
import org.eclipse.xtext.ui.editor.model.edit.ISemanticModification;
import org.eclipse.xtext.ui.editor.quickfix.Fix;
import org.eclipse.xtext.ui.editor.quickfix.IssueResolutionAcceptor;
import org.eclipse.xtext.ui.editor.utils.EditorUtils;
import org.eclipse.xtext.ui.refactoring.ui.IRenameContextFactory;
import org.eclipse.xtext.ui.refactoring.ui.IRenameElementContext;
import org.eclipse.xtext.ui.refactoring.ui.IRenameSupport;
import org.eclipse.xtext.util.Strings;
import org.eclipse.xtext.util.concurrent.IUnitOfWork;
import org.eclipse.xtext.validation.Issue;

import com.google.inject.Inject;

import uk.ac.york.cs.statemachines.validation.StatesValidator;

/**
 * Custom quick fixes.
 *
 * See
 * https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#quick-fixes
 */
@SuppressWarnings("restriction")
public class StatesQuickfixProvider extends org.eclipse.xtext.ui.editor.quickfix.DefaultQuickfixProvider {

	@Inject(optional = true)
	IRenameSupport.Factory renameSupportFactory;

	@Inject(optional = true)
	IRenameContextFactory renameContextFactory;

	@Fix(StatesValidator.NO_CAPITAL_AT_BEGINNING)
	public void fixLowercaseBeginning(final Issue issue, IssueResolutionAcceptor acceptor) {

		ISemanticModification semanticRename = (EObject element, IModificationContext context) -> {
			XtextEditor editor = EditorUtils.getActiveXtextEditor();
			IXtextDocument document = editor.getDocument();
			
			IUnitOfWork<IRenameElementContext, XtextResource> unitOfWork = new IUnitOfWork<IRenameElementContext, XtextResource>() {
				public IRenameElementContext exec(XtextResource state) {
					return renameContextFactory.createRenameElementContext(element, editor, null, state);
				}
			};
			
			IRenameElementContext renameElementContext = document.readOnly(unitOfWork);
			
			EStructuralFeature feature = element.eClass().getEStructuralFeature("name");
			String currName = (String) element.eGet(feature);
			String newName = Strings.toFirstUpper(currName);
			
			IRenameSupport rename = renameSupportFactory.create(renameElementContext, newName);
			
			rename.startDirectRefactoring();

		};

		acceptor.accept(issue, "Capitalize name", "Capitalize name of '" + issue.getData()[0] + "'", "upcase.png",
				semanticRename);
	}

}
